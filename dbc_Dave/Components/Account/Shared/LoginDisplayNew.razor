@using Microsoft.AspNetCore.Identity
@implements IDisposable

@inject NavigationManager NavigationManager
@inject SignInManager<IdentityUser> SignInManager


<AuthorizeView>
    <Authorized>
        <div class="top-bar justify-content-lg-end p-2">
            
            <form method="post" action="#" asp-antiforgery="true">
                
                <button type="submit" class="btn-cancel" @onclick="(() => SignInManager.SignOutAsync())">Log out hi</button>
            </form>

        </div>
    </Authorized>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

